name: Tests

on:
    push:
        branches:
            - master

jobs:
    FormatCheck:
        strategy:
            matrix:
                go-version:
                  - "1.22"
        runs-on: ubuntu-latest
        steps:
          - name: Install Go
            uses: actions/setup-go@v3
            with:
                go-version: ${{matrix.go-version}}
          - name: Checkout
            uses: actions/checkout@v4
            with:
                fetch-depth: 1
          - name: FormatCheck
            run: if [ `go fmt ./... | wc -l` -gt 0 ] ; then echo "Found unformatted code" ; exit 1 ; else exit 0 ; fi

    StaticCheck:
        strategy:
            matrix:
                go-version:
                  - "1.22"
        runs-on: ubuntu-latest
        steps:
          - name: Install Go
            uses: actions/setup-go@v3
            with:
                go-version: ${{matrix.go-version}}
          - name: Checkout
            uses: actions/checkout@v4
            with:
                fetch-depth: 1
          - name: StaticCheck
            uses: dominikh/staticcheck-action@v1.3.0
            with:
                version: latest
                install-go: false
                cache-key: ${{matrix.go-version}}

    Test:
        strategy:
            matrix:
                go-version:
                  - "1.22"
                platform:
                  #- macos-latest
                  - ubuntu-latest
                  #- windows-latest
        runs-on: ${{matrix.platform}}
        steps:
          - name: Install Go
            uses: actions/setup-go@v3
            with:
                go-version: ${{matrix.go-version}}
          - name: Checkout
            uses: actions/checkout@v4
            with:
                fetch-depth: 1
          - name: Test
            run: go test -v `go list ./... | grep -v example` --coverprofile=cover.out
          - name: Coverage
            run: go tool cover -func=cover.out
