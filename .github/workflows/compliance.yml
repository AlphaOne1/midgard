# SPDX-FileCopyrightText: 2025 The midgard contributors.
# SPDX-License-Identifier: MPL-2.0

name: Compliance Checks

on:
  push:
      branches:
          - master
  pull_request:
      branches:
          - master

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

permissions:
    contents: read

jobs:
    REUSE:
        runs-on: ubuntu-latest
        steps:
          - name: Harden Runner
            uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
            with:
                egress-policy: audit

          - name: Checkout
            uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
            with:
                fetch-depth: 1

          - name: REUSE Compliance Check
            uses: fsfe/reuse-action@676e2d560c9a403aa252096d99fcab3e1132b0f5 #v6.0.0

    CheckSignedOffCommit:
        if: >
          github.event_name == 'push' &&
          !startsWith(github.actor, 'dependabot') &&
          github.event.pusher.name != 'web-flow' &&
          github.event.pusher.name != 'github-actions[bot]' &&
          github.event.pusher.name != 'github-merge-queue[bot]'
        runs-on: ubuntu-latest
        permissions:
            contents: read
        steps:
            - name: Harden Runner
              uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
              with:
                  egress-policy: audit

            - name: Checkout
              uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
              with:
                  fetch-depth: 0

            - name: Determine pushed commits
              id: range
              run: |
                  set -euo pipefail
                  
                  # Use GitHub-provided SHAs to build the range for this push
                  BEFORE="${{ github.event.before }}"
                  AFTER="${{ github.sha }}"
                  
                  if [ "$BEFORE" = "0000000000000000000000000000000000000000" ]
                  then
                      # New branch or force push without previous SHA
                      git rev-list --no-merges "$AFTER" > shas.txt
                  else
                      git rev-list --no-merges "$BEFORE".."$AFTER" > shas.txt
                  fi

            - name: Check for Signed-off-by
              run: |
                  set -euo pipefail
                  missing=""
                  
                  while read -r sha
                  do
                      [ -n "$sha" ] || continue
                      msg=`git log --format=%B -n 1 "$sha"`
                  
                      if ! printf '%s' "$msg" | grep -Eqi '^[[:space:]]*Signed[- ]off[- ]by:'
                      then
                          echo "Commit $sha missing Signed-off-by"
                          missing="true"
                      fi
                  done < shas.txt
                  
                  if [ "$missing" = "true" ]
                  then
                      echo "DCO check failed on push"
                      exit 1
                  fi
                  
                  echo "All pushed commits are signed"

    CheckSignedOffPullRequest:
        if: github.event_name == 'pull_request' && !contains(github.event.pull_request.labels.*.name, 'bypass-dco')
        runs-on: ubuntu-latest
        permissions:
            contents: read
            pull-requests: read
        steps:
          - name: Harden Runner
            uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
            with:
              egress-policy: audit

          - name: Checkout
            uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
            with:
              fetch-depth: 0

          - name: Get PR commits
            env:
              GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            run: |
              set -euo pipefail
              gh --version
              jq --version
                
              # Fetch all commits of the PR with pagination and extract SHAs
              gh api -H "Accept: application/vnd.github+json" --paginate \
                repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/commits \
                | jq -r '.[].sha' > shas.txt

          - name: Check for Signed-off-by
            run: |
                set -euo pipefail
                missing=""

                while read -r sha
                do
                    [ -n "$sha" ] || continue
                    msg=`git log --format=%B -n 1 "$sha"`
                
                    if ! printf '%s' "$msg" | grep -Eqi '^[[:space:]]*Signed[- ]off[- ]by:'
                    then
                        echo "Commit $sha missing Signed-off-by"
                        missing="true"
                    fi
                done < shas.txt

                if [ "$missing" = "true" ]
                then
                    echo "DCO check failed"; exit 1
                fi

                echo "All commits are signed"